{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bmaim\\\\OneDrive\\\\Documents\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\"; //Added these imports\n\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport FocusDuration from './FocusDuration';\nimport BreakDuration from './BreakDuration';\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false); //My code\n\n  const [focusCount, setFocusCount] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [activeTime, setActiveTime] = useState(focusTime * 60);\n  const [completedPercentage, setCompletedPercentage] = useState(0);\n  const [formatedPercentage, setFormatedPercentage] = useState('0');\n  const [focusOrBreak, setFocusOrBreak] = useState(true);\n  const [paused, setPaused] = useState(false);\n  const [stopped, setStopped] = useState(true);\n  const [timeRan, setTimeRan] = useState(false);\n\n  const increaseBreak = () => {\n    if (breakDuration < 15) {\n      setBreakDuration(breakDuration + 1);\n    }\n  };\n\n  const decraseBreak = () => {\n    if (breakDuration > 1) {\n      setBreakDuration(breakDuration - 1);\n    }\n  };\n\n  const increaseFocusDuration = () => {\n    if (focusCount < 60) {\n      setFocusCount(focusCount + 5);\n    }\n  };\n\n  const decreaseFocusCount = () => {\n    if (focusCount > 5) {\n      setFocusCount(focusCount - 5);\n    }\n  };\n\n  useInterval(() => {\n    // ToDo: Implement what should happen when the timer is running\n    if (isTimerRunning) {\n      //decrease active counter by 1sec per sec\n      setActiveTime(currentTime => currentTime - 1);\n\n      if (activeTime <= 0) {\n        if (focusOrBreak) {\n          new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n          adjustActiveTime(breakTime);\n          setFocusOrBreak(!focusOrBreak);\n        } else {\n          adjustActiveTime(focusTime);\n          setFocusOrBreak(!focusOrBreak);\n        }\n      }\n\n      setCompletedPercentage(currentPercentage => {\n        //find what percentage we are completed by\n        currentPercentage = ((1 - activeTime / ((focusOrBreak ? focusTime : breakTime) * 60)) * 100).toFixed(2); //format completed percentage\n\n        setFormatedPercentage(currentPercentage);\n      });\n      console.log(formatedPercentage);\n    }\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n    setPaused(prevState => !prevState);\n    setStopped(prevState => prevState = false);\n    setTimeRan(prevState => prevState = true);\n  }\n\n  function stop() {\n    adjustActiveTime(focusCount);\n    playPause();\n    setStopped(prevState => prevState = true);\n    setTimeRan;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", focusCount < 10 ? \"0\" : \"\", focusCount, \":00\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    onClick: decreaseFocusCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    onClick: increaseFocusDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", breakDuration < 10 ? \"0\" : \"\", breakDuration, \":00\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    onClick: decraseBreak,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    onClick: increaseBreak,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    title: \"Stop the session\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, \"Focusing for 25:00 minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, \"25:00 remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": \"0\" // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: \"0%\"\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/bmaim/OneDrive/Documents/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","secondsToDuration","FocusDuration","BreakDuration","Pomodoro","isTimerRunning","setIsTimerRunning","focusCount","setFocusCount","breakDuration","setBreakDuration","activeTime","setActiveTime","focusTime","completedPercentage","setCompletedPercentage","formatedPercentage","setFormatedPercentage","focusOrBreak","setFocusOrBreak","paused","setPaused","stopped","setStopped","timeRan","setTimeRan","increaseBreak","decraseBreak","increaseFocusDuration","decreaseFocusCount","currentTime","Audio","play","adjustActiveTime","breakTime","currentPercentage","toFixed","console","log","playPause","prevState","stop","oi","height","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\n//Added these imports\nimport {minutesToDuration, secondsToDuration} from \"../utils/duration\";\nimport FocusDuration from './FocusDuration';\nimport BreakDuration from './BreakDuration';\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  //My code\n  const [focusCount, setFocusCount] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [activeTime, setActiveTime] = useState(focusTime*60);\n  const [completedPercentage, setCompletedPercentage] = useState(0);\n  const [formatedPercentage, setFormatedPercentage] = useState('0');\n  const [focusOrBreak, setFocusOrBreak] = useState(true);\n  const [paused, setPaused] = useState(false);\n  const [stopped, setStopped] = useState(true);\n  const [timeRan, setTimeRan] = useState(false);\n\n\n  const increaseBreak = () => {\n    if (breakDuration < 15) {\n      setBreakDuration(breakDuration + 1);\n    }\n  }\n\n  const decraseBreak = () => {\n    if (breakDuration > 1) {\n      setBreakDuration(breakDuration - 1);\n    }\n  }\n\n  const increaseFocusDuration = () => {\n    if (focusCount < 60) {\n      setFocusCount(focusCount + 5);\n    }\n  }\n\n  const decreaseFocusCount = () => {\n    if (focusCount > 5) {\n      setFocusCount(focusCount - 5);\n    }\n  }\n\n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n      if(isTimerRunning){\n        //decrease active counter by 1sec per sec\n        setActiveTime((currentTime) => currentTime-1)\n        if(activeTime <=0){\n          if(focusOrBreak){\n          new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n          adjustActiveTime(breakTime)\n          setFocusOrBreak(!focusOrBreak)\n          }else{\n            adjustActiveTime(focusTime)\n            setFocusOrBreak(!focusOrBreak)\n          }\n        }\n        \n        setCompletedPercentage((currentPercentage) => {\n          //find what percentage we are completed by\n          currentPercentage = ((1-(activeTime/ ((focusOrBreak ? focusTime : breakTime)*60))) *100).toFixed(2)\n          //format completed percentage\n          setFormatedPercentage(currentPercentage)\n        });\n        console.log(formatedPercentage)\n      }\n      \n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n      setPaused((prevState) => !prevState);\n      setStopped((prevState) => prevState = false);\n      setTimeRan((prevState) => prevState = true);\n  }\n\n  function stop() {\n    adjustActiveTime(focusCount);\n    playPause();\n    setStopped((prevState) => prevState = true);\n    setTimeRan\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration (Focus Duration: 25:00) --Passed*/}\n              Focus Duration: {focusCount < 10 ? \"0\" : \"\"}{focusCount}:00\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session --Passed*/}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                onClick={decreaseFocusCount}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session --Passed*/}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                onClick={increaseFocusDuration}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration --Passed*/}\n                Break Duration: {breakDuration < 10 ? \"0\" : \"\"}{breakDuration}:00\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session --Passed*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  onClick={decraseBreak}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session --Passed*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  onClick={increaseBreak}\n\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\n            <h2 data-testid=\"session-title\">Focusing for 25:00 minutes</h2>\n            {/* TODO: Update message below to include time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              25:00 remaining\n            </p>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow=\"0\" // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: \"0%\" }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}